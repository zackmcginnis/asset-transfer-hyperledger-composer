/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

namespace org.asset-network.com

/****************** MODEL DEFINITIONS: START ******************/
enum AccountType {
    o CUSTOMER
    o BUSINESS
}

/**
 * A User participant
 */
abstract participant User identified by userId {
  o String userId
  o String firstName
  o String lastName
  o AccountType accountType
  o String email
}

/**
 * A Customer participant
 */
participant Customer extends User {
    o String address1
    o String address2
    o String country
    o String postcode
}

/**
 * A Business participant
 */
participant Business extends User {
    o String address1
    o String address2
    o String country
    o String postcode
}

asset Vehicle identified by vehicleId {
  o String vehicleId
  --> User owner
}

/****************** MODEL DEFINITIONS: END ******************/
/****************** PARTICIPANT TRANSACTIONS: START ******************/
/*
NOTE: Composer REST Server automatically sets up endpoints for CRUD operations (GET, POST, etc...) for all participant types.
The following transactions act as an extension to these automatically generated endpoints, and may overlap in many areas
*/


/****************** PARTICIPANT TRANSACTIONS: END ******************/
/****************** ACCOUNT TRANSACTIONS: START ******************/
/*
NOTE: Composer REST Server automatically sets up endpoints for CRUD operations (GET, POST, etc...) for the Vehicle asset.
The following transactions act as an extension to these automatically generated endpoints, and may overlap in many areas
*/

transaction Transfer {
  --> User owner
  --> User newOwner
  --> Vehicle vehicle
}

event TransferNotification {
  --> User owner
  --> User newOwner
  --> Vehicle vehicle
}

/****************** ACCOUNT TRANSACTIONS: END ******************/
/****************** HISTORIAN TRANSACTIONS: START ******************/
transaction GetUserTransactionHistory {
  --> User owner
}

event GetUserTransactionHistoryNotification {
  --> User owner
}

transaction GetVehicleTransactionHistory {
  --> User owner
  --> Vehicle vehicle
}

event GetVehicleTransactionHistoryNotification {
  --> User owner
  --> Vehicle vehicle
}
/****************** HISTORIAN TRANSACTIONS: END ******************/
